1. https://leetcode.com/problems/maximum-product-of-splitted-binary-tree/
Solution --
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
#define mod 1000000007
#define ll long long int
class Solution {
public:
    ll totalsum = 0;
    ll ans = 0;
    ll presum(TreeNode* root, ll &sum){
        if(!root) return sum;

        sum += root->val;
        presum(root->left, sum);
        presum(root->right, sum);
        return sum;
    }

    ll preans(TreeNode* root){
        if(!root) return 0;

        ll l = preans(root->left);
        ll r = preans(root->right);
        
        ll temp = l + r + root->val;
        ans = max((temp * (totalsum - temp)) , ans);
        return temp;
    }

    int maxProduct(TreeNode* root) {
        totalsum = presum(root, totalsum);
        preans(root);
        return ans % mod;
    }
};
