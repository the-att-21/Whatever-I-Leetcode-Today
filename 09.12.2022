1. https://leetcode.com/problems/maximum-difference-between-node-and-ancestor/description/
Solution : 
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxi = INT_MIN;
    int mini = INT_MAX;
    int ans = 0;
    void pre(TreeNode* root, int maxi, int mini){
        if(!root) return;

        maxi = max(maxi, root->val); //8 8 8
        mini = min(mini, root->val); //8 3 1
        ans = max(ans, (maxi-mini)); //0 5 7

        pre(root->left, maxi, mini); //3 1
        pre(root->right, maxi, mini);

    }
    int maxAncestorDiff(TreeNode* root) {
        pre(root, maxi, mini); return ans;
    }
};
