1. https://leetcode.com/problems/best-time-to-buy-and-sell-stock/description/
Solution : 
class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int mini = prices[0];
        int profit = 0;

        for(int i = 1; i < prices.size(); ++i){
            int cost = prices[i] - mini;
            profit = max(profit, cost);
            mini = min(mini, prices[i]);
        }

        return profit;
    }
};

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2. https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/description/
Solution: 

class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int n= prices.size();
        if(prices.size()==1){
            return 0;
        }
        
        vector<int>buy(n,0);
        vector<int>sell(n,0);
        
        buy[0]=-prices[0];
        sell[0]=0;
        buy[1]=max(-prices[0],-prices[1]);
        sell[1]=max(0,-prices[0]+prices[1]);
        
        for(int i=2;i<n;i++)
      {
        buy[i]=max(buy[i-1],sell[i-2]-prices[i]);
        sell[i]=max(sell[i-1],buy[i-1]+prices[i]);
      }
        return sell[n-1];
    }
};
