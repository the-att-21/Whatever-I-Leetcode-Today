1. https://leetcode.com/problems/house-robber/description/
Soltuon : 
*** C++ ***
class Solution {
public:
    int dp[1000];
    int tryrob(vector<int>& nums, int i){
        if(i >= nums.size()) return 0;
        if(i == nums.size() - 1) return nums[i];

        if(dp[i] != -1) return dp[i];

        return dp[i] = max(tryrob(nums, i + 1), nums[i] + tryrob(nums, i+ 2));
    }
    int rob(vector<int>& nums) {
        memset(dp,-1,sizeof(dp));
        return tryrob(nums, 0);
    }
};

*** JAVA ***
class Solution {
    public int rob(int[] nums) {
        int n=nums.length;
        int pre = 0; 
        int curr = 0;
        for(int i = 0; i < n; i++){
            int temp = Math.max(pre + nums[i], curr);
            pre = curr;
            curr = temp;
        }

        return curr;
    }
}
